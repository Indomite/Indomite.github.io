(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{462:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"eslint全讲"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint全讲"}},[t._v("#")]),t._v(" ESlint全讲")]),t._v(" "),s("blockquote",[s("p",[t._v("为什么需要ESlint？")])]),t._v(" "),s("p",[t._v("ESLint 是在 ECMAScript/JavaScript 代码中识别和报告模式匹配的工具，它的目标是保证"),s("strong",[t._v("代码的一致性和避免错误")]),t._v("，还可以"),s("strong",[t._v("统一代码风格")]),s("br"),t._v("\n（其实在eslint --init初始化的时候选择的功能"),s("strong",[t._v("To check syntax, find problems, and enforce code style")]),t._v("，就已经明确说明ESlint是干什么的）")]),t._v(" "),s("h3",{attrs:{id:"怎么安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么安装"}},[t._v("#")]),t._v(" 怎么安装")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://eslint.cn/docs/user-guide/getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网讲解"),s("OutboundLink")],1),s("br"),t._v("\n首先ESlint基于node编写，那么属于npm的包，但是又属于可执行命令一类")]),t._v(" "),s("div",{staticClass:"language-bush extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//全局安装\nnpm i eslint -g\neslint [检测的文件...] //全局安装可以直接执行指令，省事，但是对于项目的维护性来说不强（如果团队开发ESlint配置应该统一\n\n\n//本地依赖安\nnpm init -y\nnpm i eslint -D //它只是检测代码，而且是静态检测（不是执行的时候检测），所以相当于一个工具或者说是一个插件\nnpx eslint [检测的文件...]\n")])])]),s("h3",{attrs:{id:"高度配置化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高度配置化"}},[t._v("#")]),t._v(" 高度配置化")]),t._v(" "),s("blockquote",[s("p",[t._v("ESlint优秀的地方就是规则可以根据自己的团队风格去边，自由度非常高")])]),t._v(" "),s("p",[s("a",{attrs:{href:"http://eslint.cn/docs/user-guide/configuring",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网讲解"),s("OutboundLink")],1),s("br"),t._v("\n先说下几种配置方式")]),t._v(" "),s("ul",[s("li",[t._v("package.json的eslintConfig字段进行配置，配置的内容和.eslintrc.json形式一致")]),t._v(" "),s("li",[t._v("[npx(可选)] eslint --init 选择三种配置文件.eslintrc[.js、.json、.yaml]")]),t._v(" "),s("li",[t._v("在要使用eslint扫描的源文件中使用eslint规定格式的注释，声明对于的规则（只在该文件声明之后的地方有效）")])]),t._v(" "),s("p",[t._v("虽然配置的方式多种多样，但是万变不离其宗：在.eslintrc.js文件怎么配，其它的方式只是换个地方（"),s("strong",[t._v("当然生效的优先级有区分")]),t._v("）："),s("br"),t._v("\n原代码注释 > .eslintrc.js > .eslintrc.yaml > .eslintrc.json > package.json\n"),s("strong",[t._v("这种优先级具有覆盖性")]),t._v("（先埋个坑）")]),t._v(" "),s("h3",{attrs:{id:"具体的配置项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体的配置项"}},[t._v("#")]),t._v(" 具体的配置项")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"env"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"browser"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"es2021"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"node"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"extends"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint:recommended"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"parserOptions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"ecmaVersion"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"sourceType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("env 代表环境，针对不同的环境会做不同的"),s("strong",[t._v("语法检查")]),t._v("（内置对象不同）")]),t._v(" "),s("li",[t._v("extends 代码规则的继承，如果是一个数组，递归的依次合并（"),s("strong",[t._v("啥是继承？")]),t._v("）")]),t._v(" "),s("li",[t._v("parserOptions 一些基础的解析配置，比如ecmaVersion代表安装ECMAScript几来分析代码（还可以配置一些插件的选项，比如JSX的分析）")]),t._v(" "),s("li",[t._v("rules 代码检测的规则（eslint的核心，规定如何检测）")])]),t._v(" "),s("h3",{attrs:{id:"覆盖vs继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#覆盖vs继承"}},[t._v("#")]),t._v(" 覆盖VS继承")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("eslint的rules字段既然是检测错误的规则，那么需要规定检测是否需要检测错误，检测错误的级别，分别对应：\noff（关闭检测）或者数字0，warn（产生警告）或者数字1，error（产生错误）或者数字2")])]),t._v(" "),s("li",[s("p",[t._v("假定我们需要一个规定字符串使用的标识符：单引号、双引号、反勾号（字符串模板）")])]),t._v(" "),s("li",[s("p",[t._v("我们会这样配置rules的quotes，")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//extends1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//extend2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//extend1和extend2在配置在extends字段的效果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//extend1和extend2进行覆盖的结果，谁在前优先级高")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("ul",[s("li",[t._v("配置的extends是属于继承关系")]),t._v(" "),s("li",[s("strong",[t._v("不同的配置方式")]),t._v("属于覆盖（前面的5种）、配置的rules相对extends产生的基础配置属于覆盖")])]),t._v(" "),s("h3",{attrs:{id:"global字段配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#global字段配置"}},[t._v("#")]),t._v(" global字段配置")]),t._v(" "),s("blockquote",[s("p",[t._v("其实就是一个no-undef的语法解析的排除选项配置，你可以选择直接在rules中关闭")])]),t._v(" "),s("p",[t._v("当访问当前源文件内未定义的变量时，"),s("strong",[t._v("no-undef")]),t._v(" 规则将发出警告。如果你想在一个源文件里使用全局变量，推荐你在 ESLint 中定义这些全局变量，这样 ESLint 就不会发出警告了。你可以使用注释或在配置文件中定义全局变量")]),t._v(" "),s("p",[t._v('globals 配置属性设置为一个对象，该对象包含以你希望使用的每个全局变量。对于每个全局变量键，将对应的值设置为 "writable" 以允许重写变量，或 "readonly" 不允许重写变量')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"globals"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"var1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"writable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"var2"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"readonly"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"rules配置规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rules配置规则"}},[t._v("#")]),t._v(" rules配置规则")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://eslint.cn/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网讲解"),s("OutboundLink")],1),s("br"),t._v("\n需要注意的是")]),t._v(" "),s("ul",[s("li",[t._v('所有的规则默认都是禁用的。在配置文件中，使用 "extends": "eslint:recommended" 来启用推荐的规则，报告一些常见的问题，在下文中这些推荐的规则都带有一个'),s("strong",[t._v("绿色")]),t._v("标记。")]),t._v(" "),s("li",[t._v("对于空格的风格则有"),s("strong",[t._v("黄色")]),t._v("标记")])]),t._v(" "),s("h3",{attrs:{id:"plugin插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#plugin插件"}},[t._v("#")]),t._v(" plugin插件")]),t._v(" "),s("p",[t._v("ESlint是一个完全插件化的插件，可以将各各不同的功能实现交给ESlint对应的插件去处理，比如React的JSX识别，Vue的template识别")]),t._v(" "),s("blockquote",[s("p",[t._v("如果说eslint本身是对JS的语法分析和风格要求，那么eslint的插件就是为了解析其它的文件类型（JSX文件，VueTemplate文件）")])]),t._v(" "),s("h3",{attrs:{id:"glob模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#glob模式"}},[t._v("#")]),t._v(" glob模式")]),t._v(" "),s("p",[t._v("如果同一个目录下的文件需要有不同的配置。因此，你可以在配置中使用 overrides 键，它只适用于匹配特定的 glob 模式的文件，使用你在命令行上传递的格式 (e.g., app/**/*.test.js)")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"overrides"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//*表示所有的 /**/*.js表示任意层级的目录下")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bin/*.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib/*.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"excludedFiles"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.test.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"single"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"eslint命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint命令"}},[t._v("#")]),t._v(" ESlint命令")]),t._v(" "),s("ul",[s("li",[t._v("eslint 文件夹目录 [...文件夹目录] eslint默认处理.js的文件，如果指定文件目录会递归的扫描所有的.js文件（可以处理多个目录下的js文件）")]),t._v(" "),s("li",[t._v("eslint --ext .js,.jsx 文件夹目录 [...文件夹目录]")])])])}),[],!1,null,null,null);s.default=r.exports}}]);