(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{447:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vue常见面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue常见面试题"}},[t._v("#")]),t._v(" Vue常见面试题")]),t._v(" "),a("h3",{attrs:{id:"v-if-和-v-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-show"}},[t._v("#")]),t._v(" v-if 和 v-show")]),t._v(" "),a("p",[t._v("v-if是真的条件渲染，确保在切换的过程中条件块内的事件监听器和子组件适当的被销毁和重建，如果初始化渲染的时候条件为假，则什么也不做，等到变成真的时候，开始渲染")]),t._v(" "),a("p",[t._v("v-show只是控制一个简单的css切换，不管初始条件是什么，元素总是会被渲染")]),t._v(" "),a("h3",{attrs:{id:"组件间的通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件间的通信"}},[t._v("#")]),t._v(" 组件间的通信")]),t._v(" "),a("p",[a("strong",[t._v("props和emit")])]),t._v(" "),a("p",[t._v("父组件通过props传递数据给子组件。")]),t._v(" "),a("p",[t._v("父组件对子组件的自定义事件使用"),a("code",[t._v("v-on:eventName=doSomething")]),t._v("进行监听，当子组件内部触发了该自定义事件时（使用"),a("code",[t._v("$emit('eventName')")]),t._v("），父组件执行doSomething，从而实现子组件向父组件的通信。")]),t._v(" "),a("h3",{attrs:{id:"vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" VueX")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("getters")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("countPlus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mutations")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("increment")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" payload\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("increment")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n        <div>\n            {{ count }}\n            <button @click='increment'>点我</button>\n        </div>\n    ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" Vue-Router")]),t._v(" "),a("p",[a("strong",[t._v("嵌套路由")])]),t._v(" "),a("p",[t._v("简单来说就是router-view中还有router-vie")]),t._v(" "),a("p",[a("strong",[t._v("路由导航")])]),t._v(" "),a("p",[a("code",[t._v("router-link")]),t._v("提供了声明式导航，我们也可以使用"),a("code",[t._v("this.$router.push")]),t._v("进行函数式导航")]),t._v(" "),a("h5",{attrs:{id:"hash模式和history模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash模式和history模式"}},[t._v("#")]),t._v(" Hash模式和History模式")]),t._v(" "),a("p",[t._v("Hash模式的Url结构类似："),a("code",[t._v("https://example.com/#user/akara")])]),t._v(" "),a("p",[t._v("History模式的Url结构类似："),a("code",[t._v("https://example.com/user/akara")])]),t._v(" "),a("p",[t._v("无论哪种模式，本质都是使用的"),a("code",[t._v("history.pushState")]),t._v("，每次pushState后，会在浏览器的浏览记录中添加一个新的记录，但是并"),a("strong",[t._v("不会触发页面刷新")]),t._v("，也"),a("strong",[t._v("不会请求新的数据")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("导航守卫")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[t._v("当我们使用"),a("code",[t._v("new Vue()")]),t._v("生成Vue实例的时候，先会调用Vue._init 进行初始化。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("初始化生命周期，事件（以及initRender）")])]),t._v(" "),a("li",[a("p",[t._v("调用BeforeCreate生命周期函数")])]),t._v(" "),a("li",[a("p",[t._v("初始化数据（以及initInjections）")]),t._v(" "),a("ol",[a("li",[t._v("使用Object.defineProperty对data的属性进行数据劫持")]),t._v(" "),a("li",[t._v("当数据被渲染进页面时，调用get函数，把属性的Watcher放进dep内部的数组内")]),t._v(" "),a("li",[t._v("当数据被修改时，调用set函数，调用dep的notify方法，从而调用dep内部数组内所有Watcher的update方法")])])]),t._v(" "),a("li",[a("p",[t._v("调用Created生命周期函数")])]),t._v(" "),a("li",[a("p",[t._v("查看有没有el参数，没有的话当vm.$mount()调用时进入下一步")])]),t._v(" "),a("li",[a("p",[t._v("查看有没有template参数，有的话则把template转化成渲染函数，没有的话把el的outerHTML转化为渲染函数，渲染函数生成虚拟DOM")]),t._v(" "),a("ol",[a("li",[t._v("parse用正则等方式解析template中的指令，class，style等数据，生成AST（抽象语法树）")]),t._v(" "),a("li",[t._v("optimize用来标记静态节点，之后diff算法中就会跳过静态节点的对比")]),t._v(" "),a("li",[t._v("generate把AST转化为渲染函数")])])]),t._v(" "),a("li",[a("p",[t._v("调用beforeMount生命周期函数")])]),t._v(" "),a("li",[a("p",[t._v("利用虚拟DOM生成真实DOM并挂载在el元素上")])]),t._v(" "),a("li",[a("p",[t._v("调用Mounted生命周期函数")]),t._v(" "),a("p",[t._v("数据改变时")]),t._v(" "),a("ol",[a("li",[t._v("调用beforeUpdate生命周期函数")]),t._v(" "),a("li",[t._v("数据改变时，调用所有监听对应属性的Watcher的update函数，这个函数会把Watcher放进一个队列中，等到下一个tick时才取出。从而实现异步更新DOM。")]),t._v(" "),a("li",[t._v("重新生成虚拟DOM，并对新老VDom进行patch（patch的核心是diff算法）处理\n"),a("ol",[a("li",[t._v("如果oldVnode不存在，不存在则直接根据newVnode新建节点")]),t._v(" "),a("li",[t._v("调用sameVnode对oldVnode和newVnode进行比较，只有当key， tag， isComment都相同，同时定义或同时未定义data， 或者两个都是input且type相同时才是sameVnode。那么就对两个VNode进行patchVnode操作。如果不是sameVode，则直接进行替换。\n"),a("ol",[a("li",[t._v("如果新老VNode都是静态的，且key值相同，并且新的VNode标记了v-once或是clone，则只需替换elm和componentsinstance")]),t._v(" "),a("li",[t._v("新老VNode都有children，则使用updateChildren对子节点进行diff\n"),a("ol",[a("li",[t._v("对于oldVnode的children，用oldCh表示。对于newVnode的children，用newCh表示")]),t._v(" "),a("li",[t._v("首先定义 oldStartIdx、newStartIdx、oldEndIdx 以及 newEndIdx 分别是新老两个 children 的两边的索引，同时 oldStartVnode、newStartVnode、oldEndVnode 以及 newEndVnode 分别指向这几个索引对应的VNode 节点。")]),t._v(" "),a("li",[t._v("while循环，循环中oldStartIdx和oldEndIdx不断靠拢，newStartIdx和newEndIdx也不断靠拢。")]),t._v(" "),a("li",[t._v("比较，oldStartVnode和newStartVnode，oldEndVnode和newEndVnode ， oldStartVnode和newEndVnode ， oldEndVnode和newStartVnode。如果两个是sameVnode则进行patchVnode, 不是就进行下一个的比较")]),t._v(" "),a("li",[t._v("如果以上四次比较都不是sameVnode，那么找oldCh有没有和newStartVnode是sameVnode的节点\n"),a("ol",[a("li",[t._v("如果设置了key，直接通过newStartVnode的key查看有没有key相同的Vnode")]),t._v(" "),a("li",[t._v("如果没有key，则通过循环，一个个的调用sameVnode函数比较。（体现了"),a("strong",[t._v("key能够提高diff算法的效率")]),t._v("）")]),t._v(" "),a("li",[t._v("如果找不到相同的Vnode，则新建一个Vnode")])])]),t._v(" "),a("li",[t._v("循环结束。处理多余的或者不够的真实节点。oldStartIdx > oldEndIdx 新增节点 或者 newStartIdx > newEndIdx 删除节点。")])])]),t._v(" "),a("li",[t._v("如果oldVnode没有children，newVnode有，则先清空老节点的文本内容，再为DOM加入子节点")]),t._v(" "),a("li",[t._v("如果oldVnode有children，newVnode没有，则删除该节点所有子节点")]),t._v(" "),a("li",[t._v("如果新老节点都没有子节点，替换DOM的文本")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("调用updated生命周期函数")])]),t._v(" "),a("li",[a("p",[t._v("调用vm.$destroy()")])]),t._v(" "),a("li",[a("p",[t._v("调用beforeDestroy生命周期函数")])]),t._v(" "),a("li",[a("p",[t._v("删除组件（包括watchers和事件监听器等）")])]),t._v(" "),a("li",[a("p",[t._v("调用destroyed生命周期函数")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);